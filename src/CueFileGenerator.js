const { Readable } = require("stream");

class CueFileGenerator extends Readable {
  constructor({ title, fileName }) {
    super();

    this._startDate = new Date(Date.now());
    this._startCueFile(title, fileName);
    this._trackNumber = 1;
  }

  addEntry(time, title) {
    const entryTime = new Date(
      this._startDate.getTime() + time * 1000
    ).toISOString();
    this._append(`
  TRACK ${this._trackNumber++} AUDIO
    TITLE "${entryTime} ${title}"
    INDEX 01 ${this._getMinutesSeconds(time)}`);
  }

  _startCueFile(title, fileName) {
    this._append(`REM Generated by Icecast Metadata Reader NodeJS
REM Recording started at ${this._startDate.toISOString()}
TITLE "${title}"
FILE "${fileName}" WAVE`);
  }

  _read() {
    this._cueBuffer = "";
  }

  _append(string) {
    this.push(string, "ascii");
  }

  _getFrame(second) {
    return Math.round(74 * (second % 1));
  }

  _getMinutesSeconds(time) {
    const second = Math.floor(time) % 60;
    const minute = Math.floor(time / 60);
    const frame = this._getFrame(time);

    return [minute, second, frame]
      .map((value) => value.toString().padStart(2, 0))
      .join(":");
  }
}

module.exports = CueFileGenerator;
