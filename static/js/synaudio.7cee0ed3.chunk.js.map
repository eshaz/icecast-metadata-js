{"version":3,"file":"static/js/synaudio.7cee0ed3.chunk.js","mappings":"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","sources":["../../icecast-metadata-player/node_modules/@eshaz/web-worker/cjs/browser.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../../icecast-metadata-player/node_modules/simple-yenc/dist/esm.js","../../icecast-metadata-player/node_modules/synaudio/src/SynAudio.js","../../icecast-metadata-player/node_modules/synaudio/index.js"],"sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = Worker;","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","const t = (t) => {\n    const r = [];\n    for (const e of t) {\n      let t = (e + 42) % 256;\n      0 === t || 10 === t || 13 === t || 61 === t\n        ? r.push(\"=\" + String.fromCharCode((t + 64) % 256))\n        : r.push(String.fromCharCode(t));\n    }\n    return r.join(\"\");\n  },\n  r = (t) => {\n    const r = new Map();\n    [\n      ,\n      8364,\n      ,\n      8218,\n      402,\n      8222,\n      8230,\n      8224,\n      8225,\n      710,\n      8240,\n      352,\n      8249,\n      338,\n      ,\n      381,\n      ,\n      ,\n      8216,\n      8217,\n      8220,\n      8221,\n      8226,\n      8211,\n      8212,\n      732,\n      8482,\n      353,\n      8250,\n      339,\n      ,\n      382,\n      376,\n    ].forEach((t, e) => r.set(t, e));\n    const e = new Uint8Array(t.length);\n    let n,\n      o = !1,\n      s = 0,\n      l = 42,\n      g = 0;\n    t.length > 13 &&\n      \"dynEncode\" === t.substring(0, 9) &&\n      0 === parseInt(t.substring(9, 11), 16) &&\n      ((l = parseInt(t.substring(11, 13), 16)), (g = 13));\n    const c = 256 - l;\n    for (let a = g; a < t.length; a++)\n      if (((n = t.charCodeAt(a)), 61 !== n || o)) {\n        if (n > 255) {\n          const t = r.get(n);\n          t && (n = t + 127);\n        }\n        o && ((o = !1), (n -= 64)), (e[s++] = n < l && n > 0 ? n + c : n - l);\n      } else o = !0;\n    return e.subarray(0, s);\n  },\n  e = (t, r = '\"') => {\n    const e = (t, r) => ((t % r) + r) % r,\n      n = (t, r) => r.push(String.fromCharCode(61, (t + 64) % 256));\n    let o,\n      s,\n      l = [],\n      g = 1 / 0,\n      c = Array(256).fill(0),\n      a = 0;\n    '\"' === r\n      ? ((s = [0, 8, 9, 10, 11, 12, 13, 34, 92, 61]),\n        (o = (t) =>\n          0 === t ||\n          8 === t ||\n          9 === t ||\n          10 === t ||\n          11 === t ||\n          12 === t ||\n          13 === t ||\n          34 === t ||\n          92 === t ||\n          61 === t))\n      : \"'\" === r\n      ? ((s = [0, 8, 9, 10, 11, 12, 13, 39, 92, 61]),\n        (o = (t) =>\n          0 === t ||\n          8 === t ||\n          9 === t ||\n          10 === t ||\n          11 === t ||\n          12 === t ||\n          13 === t ||\n          39 === t ||\n          92 === t ||\n          61 === t))\n      : \"`\" === r &&\n        ((s = [13, 61, 96]),\n        (l = [7, 205, 231]),\n        (o = (t, r) =>\n          13 === t ||\n          (36 === t && 123 === r) ||\n          61 === t ||\n          (92 === t && (85 === r || 117 === r)) ||\n          96 === t));\n    for (let r = 0; r < t.length; r++) {\n      const n = 0 | t[r];\n      c[n]++;\n      for (let o = 0; o < l.length; o++) {\n        const s = l[o];\n        e((n - t[r + 1]) | 0, 256) === s && c[n]++;\n      }\n    }\n    for (let t = 0; t < 256; t++) {\n      let r = 0;\n      for (let n = 0; n < s.length; n++) r += c[e(s[n] - t, 256)];\n      r < g && ((g = r), (a = t));\n    }\n    const h = [\"dynEncode\", \"00\", a.toString(16).padStart(2, \"0\")];\n    for (let r = 0; r < t.length; r++) {\n      const e = (t[r] + a) % 256;\n      o(e, (t[r + 1] + a) % 256) ? n(e, h) : h.push(String.fromCharCode(e));\n    }\n    return \"\\\\\" === h[h.length - 1] && (h.pop(), n(\"\\\\\", h)), h.join(\"\");\n  },\n  n = (t) =>\n    t.replace(/[\\\\]/g, \"\\\\\\\\\").replace(/[`]/g, \"\\\\`\").replace(/\\${/g, \"\\\\${\");\nexport { r as decode, e as dynamicEncode, t as encode, n as stringify };\n","/* Copyright 2022 Ethan Halsall\n    \n    This file is part of synaudio.\n    \n    synaudio is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    synaudio is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { decode } from \"simple-yenc\";\nimport Worker from \"@eshaz/web-worker\";\n\n// prettier-ignore\nconst simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]))\n\nconst wasmModule = new WeakMap();\n\n/* WASM strings are embeded during the build */\nconst simdWasm = String.raw`dynEncode0065eÆØÒfeeefsfÅoääääääääääegtfhÊÓÛkÒÊÒÔ×Þgeghgfekmfäe¦åíiplgnÈÔ××ÊÑÆÙÊeepÄÄÍÊÆÕÄÇÆØÊheo\u0016f\u0013ivälànâiá©eeeeeeeeg¥g¥g¦g­reg¦fÐ|f¦v³i¥f¦uÐz¦efÐ}ef¦gÙxÏ~e¦¥Ðuth¥ffwÑvÏ{tpuo¦eqh¥eqg¦gÙÏqqbeeeegvÏ¦gÙÏbeeebIfbpeeeg¦i×q¦gÙÏrrbeeeeqvÏ¦gÙÏbeeebIfbpeeeg¦m×q¦gÙÏrrbeeeeqvÏ¦gÙÏbeeebIfbpeeeg¦q×q¦gÙÏrrbeeeeqvÏ¦gÙÏbeeebIfbpeepr¦¥Ðpos¦¥Ðog¦uÏqz­repg¥fq±reg¥fqÐo¦i®reeqvÏ¦gÙÏ~®iäeq¦gÙÏe{¦gÙÏ®j¦epreo¦áÖ{¦iÐp¦gÛ¦fÏ¦fÖg¥pªi¥¦egqfpzgÐ¦áÖ¦iÐ¦gÛ¦fÏ¦cdddlÖp¦egh¥srbegesbegebIfbpgesrbegusbegubIfbpgur¦Ïrs¦Ïsg¦mÏgp¦gÐpreppi¥egqÏg¦gÙÏpegvÏ¦gÙÏbegepbegebIfbpgepo{«rffq{ÏqÐopq¦äØgo¦fÖiäeq¦gÙÏoeqvÏ¦gÙÏgeoge÷geq¦fÏjqpqg}«refqÐpyq¦gÙoÏregh¥goÏqgrÏsgeqge÷geqsgiqgi÷gig¦mÏgp¦gÐpreppxyÏytxÏtw¦fÏw|¬repqfpf¦e±re¦efÐtf¦fÖuef¦gÙvÏwf¦i®yf¦áÖo¦q«zh¥frÑs¦egg¥g¥yreeefsÏ¦gÙÏ®wes¦gÙÏq°ÖreeqbegeebegebIfbpgeg¥o¦i«reeqbeguebegubIfbpguo¦m«reeqbegebegbIfbpgzreeqbegebegbIfbpgpfog«rfpg¦äØquiäeg¦gÙÏxegsÏ¦gÙÏgexge÷geg¦f×jgpgqt«refgÐqpg¦gÙxÏ{egh¥gxÏsg{Ï}gesge÷ges}gisgi÷gig¦mÏgq¦gÐqrepppvÏpr¦fÏr|¬reppg¥j¦g­rej¦fÐvi¦v³i¥i¦uÐ|¦ey¦eiÐ{hi¦gÙzÏ}h¦¥Ðjt¦ewh¥iiwÑuÏxtpjo¦eqh¥hqg¦gÙÏqqbeeehguÏ¦gÙÏbeeebIfbpeehg¦i×q¦gÙÏrrbeeehquÏ¦gÙÏbeeebIfbpeehg¦m×q¦gÙÏrrbeeehquÏ¦gÙÏbeeebIfbpeehg¦q×q¦gÙÏrrbeeehquÏ¦gÙÏbeeebIfbpeepr¦¥Ðpos¦¥Ðog¦uÏq|­repg¥iq±reg¥iqÐo¦i®rehquÏ¦gÙÏ}®iähq¦gÙÏhx¦gÙÏ®j¦epreo¦áÖx¦iÐp¦gÛ¦fÏ¦fÖ~g¥pªi¥¦egqfp|gÐ¦áÖ¦iÐ¦gÛ¦fÏ¦cdddlÖp¦egh¥srbegesbegebIfbpgesrbegusbegubIfbpgur¦Ïrs¦Ïsg¦mÏgp¦gÐprepp~i¥hgqÏg¦gÙÏphguÏ¦gÙÏbegepbegebIfbpgepox«rfiqxÏqÐopq¦äØgo¦fÖiähq¦gÙÏohquÏ¦gÙÏgeoge÷geq¦fÏjqpqg{«reiqÐpyq¦gÙoÏrhgh¥goÏqgrÏsgeqge÷geqsgiqgi÷gig¦mÏgp¦gÐpreppyzÏytzÏtw¦fÏwv¬repqfpi¦e±re¦ep¦eiÐsi¦fÖthi¦gÙuÏwi¦i®yi¦áÖj¦q«|¦erh¥irÑo¦egg¥g¥yrehhioÏ¦gÙÏ®who¦gÙÏq°ÖrehqbegehbegebIfbpgeg¥j¦i«rehqbeguhbegubIfbpguj¦m«rehqbeghbegbIfbpg|rehqbeghbegbIfbpgpjgi«rfpg¦äØqtiähg¦gÙÏzhgoÏ¦gÙÏgezge÷geg¦f×jgpgqs«reigÐqpg¦gÙzÏxhgh¥gzÏogxÏ{geoge÷geo{giogi÷gig¦mÏgq¦gÐqrepppuÏpr¦fÏrv¬repp¦ein¦egem¦egeg¥k¦e¯i¥k¦hÖjg¥k¦fÐi¦h®i¥¦eoqfpegk¦áÖoqh¥gge \u0005ggi \u0005ggm \u0005ggq \u0005g¦uÏgq¦iÐqreppji¥eo¦gÙÏgjqh¥gge \u0005g¦iÏgq¦fÐqreppg¥i¦h®i¥¦eoqfphgk¦áÖoqh¥gge \u0005ggi \u0005ggm \u0005ggq \u0005g¦uÏgq¦iÐqreppji¥ho¦gÙÏgh¥gge \u0005g¦iÏgj¦fÐjreppk¦uÐsk\u001c\b\u001bk¦v­i¥¦ei¦eqqgpbx¦ejhgh¥gbeeebJfbKfbIfgbeeubJfbKfbIfgbeebJfbKfbIfgbeebJfbKfbIfg¦¥Ðgj¦uÏjs­repi¦ÕÖq¦fiqfpk¦uÐsk\u001c\b\u001b¦eqpbhbgbebf÷÷÷g¥kq±req¦äØkÏpk¦hÖoiähq¦gÙÏgojh¥ggeøù÷g¦iÏgj¦fÐjrepoq×jqpqp¦h®rekqÐjhq¦gÙÏgh¥ggqøùggmøùggiøùggeøù÷÷÷÷g¦uÏgj¦iÐjrepp¦ejii¥bxhgh¥ggbeeebJfbpeeggbeeubJfbpeuggbeebJfbpeggbeebJfbpeg¦¥Ðgj¦uÏjs­reppk\u0017¨eeå$÷úfkÐtg¥jk³rekkjÐf¦h°iäf¦áÖr¦iÐg¦gÛ¦fÏo¦hÖqbx¦epg¦q´i¥o¦adddlÖohj¦gÙÏgh¥ggbegebJfbpgeggbegubJfbpguggbegbJfbpgggbegbJfbpgg¦¥Ðgp¦uÏpo¦iÐoreppqi¥hjpÏ¦gÙÏgh¥ggbegebJfbpgeg¦uÏgq¦fÐqreppfr«rfjrÏjjpjÐqhj¦gÙÏgh¥gggeøgeg¦iÏgq¦fÐqreppöt¦e¯i¥l¦gÙu¦er¦ekÐvk¦fÖwk¦fÐ¦ÕÖq eoh¥er¦gÙÏygeekrÏ¦gÙÏ|\b\u001bgäiªi¥bqeeeeeeeeeeeeeeeebqeeeeeeeeeeeeeeee¦eqfpbx¦eg¦epbqeeeeeeeeeeeeeeeebqeeeeeeeeeeeeeeeeh¥goÏfbeeebJfghÏjbeeebKfbIffbeeubJfjbeeubKfbIffbeebJfjbeebKfbIffbeebJfjbeebKfbIfbKfbIfbKfbIfbKfbIfbKfbIfg¦¥Ðgp¦uÏps­repqpf|gebhbgbebf÷÷÷bhbgbebf÷÷÷g¥fk³ref¦äØgwiäyf¦gÙjÏgeøhjÏgeù÷ù÷f¦f×jfpfgv«ref¦gÙgkfÐjh¥goÏfgiøghÏpgiùfgeøpgeù÷÷ùù÷÷g¦mÏgj¦gÐjreppú ú \u0004\u0007\b\u001bmgeÃi¥nrgemgep \u0006 \u0005ouÏolrÏrt­reppg¥l¦f±rengefllÑgÏjtjt­t¦epfgÐf¦ef¦e¯rg¥k¦e±i¥qfpk¦hÖjg¥k¦fÐ¦h®i¥qfper¦gÙÏgk¦áÖpqh¥gge \u0005ggi \u0005ggm \u0005ggq \u0005g¦uÏgq¦iÐqreppjªreeprÏ¦gÙÏgh¥gge \u0005g¦iÏgj¦fÐjrepprt³re¦ekÐpk¦fÖuer¦gÙÏok¦fÐ¦ÕÖl h¥er¦gÙÏvgeekrÏ¦gÙÏw\b\u001bgäiªi¥bqeeeeeeeeeeeeeeeebqeeeeeeeeeeeeeeee¦eqfpbx¦eqoghjbqeeeeeeeeeeeeeeeebqeeeeeeeeeeeeeeeeh¥gbeeebJfjbeeebKfbIfgbeeubJfjbeeubKfbIfgbeebJfjbeebKfbIfgbeebJfjbeebKfbIfbKfbIfbKfbIfbKfbIfbKfbIfg¦¥Ðgj¦¥Ðjq¦uÏqs­replpfwgebhbgbebf÷÷÷bhbgbebf÷÷÷g¥fk³ref¦äØguiävf¦gÙjÏgeøhjÏgeù÷ù÷f¦f×jfpfgp«ref¦gÙgkfÐjh¥goÏfgiøghÏqgiùfgeøqgeù÷÷ùù÷÷g¦mÏgj¦gÐjreppú ú \u0004\u0007\b\u001bmgeÃi¥nrgemgep \u0006 \u0005o¦iÏor¦fÏrt¬reppppetÙÆ×ÌÊÙÄËÊÆÙÚ×ÊØflØÎÒÉ`;\nconst scalarWasm = String.raw`dynEncode000e\u000eo{\u000f\u000e\u000e\u000e\u000f+\u0011n\u0011\u000en\u0013\u000fn\u0018\u000e\u0010\u001d\u000f\u0011s|\u0014{s{}\u0010\u000e\u0010\u0011\u0012\u0011\u000e\u000f\u0010\u0014\u0016\u000f\u000eO\u0012\u0019\u0015)\u0010\u0017q}szos\u000e\u0010\u0019mmvso~mpos\u0011\u000e\u0018  \u0011Ú\u0011\u0010\u0019\u000f\u0010N.\u0010O\u0010V\u001b\u000e.\u0010O\u000fy/\u0014.\u000fO\u0013\\\u0012N.\u000fO\u0012y/\u0015.\u000fO\u0010/\u0016.\u000fO\u000f/\u0017\u0011N.\u000e/\u0010O\u000f/\u0012\u0011N.\u0010.\u0010.\u0013x0\u00118\u0010\u000e.\u00108\u0010\u000e F\u0010\u000e.\u0010.\u00118\u0010\u0012.\u00108\u0010\u0012 F\u0010\u0012.\u0010.\u00118\u0010\u0016.\u00108\u0010\u0016 F\u0010\u0016.\u0010.\u00118\u0010\u001a.\u00108\u0010\u001a F\u0010\u001a.\u0010O\u001ex/\u0010.\u0012O\u0011x/\u0011.\u0012O\u0012x/\u0012.\u0011.\u0015V\u001b\u000e\u0019\u0010N.\u000f.\u0012O\u000fy0\u0011Z\u001b\u000e.\u0017\u0012.\u0010.\u0010.\u0013x8\u0010\u000e.\u00108\u0010\u000e F\u0010\u000e.\u0012\u0013.\u0011\u0019/\u0010.\u000f.\u0012T\u001b\u000e.\u000f.\u0010y/\u0012.\u0013.\u0010O\u00100\u0018x/\u0019.\u000e/\u0010\u0011N.\u0010.\u0018x0\u0011.\u0010.\u0019x0\u001a8\u0010\u000e.\u00118\u0010\u000e F\u0010\u000e.\u0011.\u001a8\u0010\u0012.\u00118\u0010\u0012 F\u0010\u0012.\u0010O\u0016x/\u0010.\u0012O\u0010y0\u0012\u001b\u000e\u0019\u0019.\u0013.\u0016x/\u0013.\u0014.\u001bO\u000fx0\u001bU\u001b\u000e\u0019\u001a\u000f\u0019.\u000fO\u000eZ\u001b\u000e.\u000fO\u0010/\u0012.\u000e8\u0010\u000e/\u001c.\u000fO\u000fT/\u0011.\u000fO\u0011T/\u0013.\u000e/\u0010\u0011N.\u000e.\u00108\u0010\u000e.\u001c 0\u001cF\u0010\u000e\u0010N.\u0011\u001b\u000e.\u000e.\u00108\u0010\u0012.\u000e8\u0010\u0012 F\u0010\u0012.\u000fO\u0010T\u001b\u000e.\u000e.\u00108\u0010\u0016.\u000e8\u0010\u0016 F\u0010\u0016.\u0013\u001b\u000e.\u000e.\u00108\u0010\u001a.\u000e8\u0010\u001a F\u0010\u001a\u0019.\u0010.\u0012x/\u0010.\u0014O\u000fy0\u0014\u001b\u000e\u0019\u0019\u0019\u0011\u0010\u0013\u0014\u0010N.\u00120\u0013O\u0013V\u0012O\u000e\u0013.\u0013O\u0012y/\u0017\u0011N.\u000e.\u0014x0\u00128\u0010\u001a.\u0010¡0\u0018.\u000f.\u0014x0\u00168\u0010\u001a¢.\u00128\u0010\u0016.\u0010¡0\u001b.\u00168\u0010\u0016¢.\u00128\u0010\u0012.\u0010¡0\u001c.\u00168\u0010\u0012¢.\u00128\u0010\u000e.\u0010¡0\u001d.\u00168\u0010\u000e¢.\u0019    /\u0019.\u0018.\u0018¢.\u001b.\u001b¢.\u001c.\u001c¢.\u001d.\u001d¢.\u001a    /\u001a.\u0014O\u001ex/\u0014.\u0015O\u0012x0\u0015.\u0017V\u001b\u000e\u0019.\u0013O\u000fyO\u00190\u0012.\u0013\\\u001b\u000e.\u0012O/\u0014.\u0013O\u000f\u0012.\u000e.\u0012O\u00100\u0015x8\u0010\u000e.\u0010¡0\u0018.\u000f.\u0015x8\u0010\u000e¢.\u0019 /\u0019.\u0018.\u0018¢.\u001a /\u001a.\u0012O\u000f\u0013.\u0012\u0019/\u0012O\u000e.\u0013y.\u0014T\u001b\u000e.\u0013.\u0012y/\u0015.\u000e.\u0012O\u00100\u000ex/\u0014.\u000e.\u000fx/\u000e\u0011N.\u00148\u0010\u0012.\u0010¡0\u0018.\u0018¢.\u00148\u0010\u000e.\u0010¡0\u001b.\u001b¢.\u001a  /\u001a.\u0018.\u000e8\u0010\u0012¢.\u001b.\u000e8\u0010\u000e¢.\u0019  /\u0019.\u0014O\u0016x/\u0014.\u000eO\u0016x/\u000e.\u0015O\u0010y0\u0015\u001b\u000e\u0019\u0019.\u0019.\u0013ÀQ\u000e\u000eÍ 0\u0010£É.\u001a.\u0010£É­.\u0011É°±Ä\u0019Ê\u0019\u0011\u0012\u0012\u0013R\u000e\u000e\u000e\u000e\u000e\u000e\u000e\u000e/$\u0010N.\u000e.\u000f.\u0010\u001e\u000e.\u0011.\u0012.\u0013\u001e\u000e.\u0017O\u000eD\u0010\u000e.\u0016O\u000eD\u0010\u000e\u0010N.\u0014O\u000eX\u0012N.\u0014O\u0011/\u0013.\u0014O\u000fy0\u0018O\u0011]\u0012N.\u000e/\u0012.\u0014O0\u001a/\u0010\u0011N. .\u00128\u0010\u000eÉ®.\u00128\u0010\u0012É®.\u00128\u0010\u0016É®.\u00128\u0010\u001aÉ®/ .\u0012O\u001ex/\u0012.\u0010O\u0012y0\u0010\u001b\u000e\u0019\u0019.\u0013\u0012N.\u001aO\u0010.\u000ex/\u0012.\u0013/\u0010\u0011N. .\u00128\u0010\u000eÉ®/ .\u0012O\u0012x/\u0012.\u0010O\u000fy0\u0010\u001b\u000e\u0019\u0019\u0010N.\u0018O\u0011W\u0012NO\u000e/\u001a\u001a\u000f\u0019.\u0011/\u0012.\u0014O0\u001a/\u0010\u0011N.!.\u00128\u0010\u000eÉ®.\u00128\u0010\u0012É®.\u00128\u0010\u0016É®.\u00128\u0010\u001aÉ®/!.\u0012O\u001ex/\u0012.\u0010O\u0012y0\u0010\u001b\u000e\u0019\u0019.\u0013\u0012N.\u001aO\u0010.\u0011x/\u0012\u0011N.!.\u00128\u0010\u000eÉ®/!.\u0012O\u0012x/\u0012.\u0013O\u000fy0\u0013\u001b\u000e\u0019\u0019.\u0014O\u0012y/\u001a.\u0014À/\u001f.\u0014O\u0013V\u0012NO\u000e/\u0018O\u000e/\u0010\u001a\u0010\u0019.!Ä.\u001f£/\u001cO\u000e/\u0013.\u0011/\u0012\u0011N.\u00128\u0010\u001a.\u001c¡0\u001d.\u001d¢.\u00128\u0010\u0016.\u001c¡0\u001d.\u001d¢.\u00128\u0010\u0012.\u001c¡0\u001d.\u001d¢.\u00128\u0010\u000e.\u001c¡0\u001d.\u001d¢.\u001e    /\u001e.\u0012O\u001ex/\u0012.\u0013O\u0012x0\u0013.\u001aV\u001b\u000e\u0019.\u0018O/\u0010O\u000f/\u0018\u001a\u000f\u0019.\u0014O\u0012y/\u001a.\u0014À/\u001fO\u000e/\u0010\u0019.!.\u0014Å0!±Ä/\u001c\u0010N.\u0010.\u0014\\\u001b\u000e.\u0014.\u0010Ox/\u001b.\u0014O\u00110\u0019\u0012.\u0010O\u0010.\u0011x/\u0012.\u0019/\u0013\u0011N.\u00128\u0010\u000e.\u001c¡0\u001d.\u001d¢.\u001e /\u001e.\u0012O\u0012x/\u0012.\u0013O\u000fy0\u0013\u001b\u000e\u0019.\u0010.\u0019\u0013.\u0010\u0019/\u0010.\u001bO\u0011W\u001b\u000e.\u0014.\u0010y/\u0013.\u0010O\u0010.\u0011x/\u0012\u0011N.\u00128\u0010\u001a.\u001c¡0\u001d.\u001d¢.\u00128\u0010\u0016.\u001c¡0\u001d.\u001d¢.\u00128\u0010\u0012.\u001c¡0\u001d.\u001d¢.\u00128\u0010\u000e.\u001c¡0\u001d.\u001d¢.\u001e    /\u001e.\u0012O\u001ex/\u0012.\u0013O\u0012y0\u0013\u001b\u000e\u0019\u0019O\u000e/\u0013.\u0018\u0012N.\u0011/\u0012\u0011N.\u0012.\u00128\u0010\u000e.\u001c¡F\u0010\u000e.\u0012.\u00128\u0010\u0012.\u001c¡F\u0010\u0012.\u0012.\u00128\u0010\u0016.\u001c¡F\u0010\u0016.\u0012.\u00128\u0010\u001a.\u001c¡F\u0010\u001a.\u0012O\u001ex/\u0012.\u0013O\u0012x0\u0013.\u001aV\u001b\u000e\u0019\u0019.\u001e.\u001fQ\u000e\u000eÍ £/\u001e.\u000f.\u0014y/\u0010\u0010N.\u0013.\u0014\\\u001b\u000e.\u0014.\u0013Ox/\u000f.\u0014.\u0013yO\u00110\u001a\u0012N.\u0013O\u0010.\u0011x/\u0012\u0011N.\u0012.\u00128\u0010\u000e.\u001c¡F\u0010\u000e.\u0012O\u0012x/\u0012.\u0013O\u000fx/\u0013.\u001aO\u000fy0\u001a\u001b\u000e\u0019\u0019.\u000fO\u0011W\u001b\u000e.\u0014.\u0013y/\u001a.\u0013O\u0010.\u0011x/\u0012\u0011N.\u0012.\u00128\u0010\u000e.\u001c¡F\u0010\u000e.\u0012.\u00128\u0010\u0012.\u001c¡F\u0010\u0012.\u0012.\u00128\u0010\u0016.\u001c¡F\u0010\u0016.\u0012.\u00128\u0010\u001a.\u001c¡F\u0010\u001a.\u0012O\u001ex/\u0012.\u001aO\u0012y0\u001a\u001b\u000e\u0019\u0019.\u001e/\u001c\u0010N.\u0010O\u000eZ\u0012NO\u000e/\u0018\u001a\u000f\u0019.\u0015O\u0010/\u0019.\u0014O\u0010/\u001aO\u000e/\u0018.\u000e/\u0012O\u000e/\u0013\u0011N. .\u00128\u0010\u000eÉ¯/\".\u0012.\u001ax8\u0010\u000eÉ/#.\u00168\u0010\u000e/\u001e.\u0012.\u0011. .!±Ä.\u001c.\u0014\u001e\u000f0\u001f.\u001el\u0012.\u0017.\u0013D\u0010\u000e.\u0016.\u001fF\u0010\u000e.\u0013\u0013.\u0018\u0019/\u0018.\".#®/ .\u0012.\u0019x/\u0012.\u0013.\u0015x0\u0013.\u0010V\u001b\u000e\u0019\u0019\u0010N.\u0015O\u000fZ\u001b\u000e.\u0018.\u0015.\u0015z0\u0012x0\u000f.\u0010.\u000f.\u0010V)/\u0015O\u000e/\u000f.\u0018.\u0012y0\u0010O\u000e.\u0010O\u000eX)/\u0010\u0010N.\u0014O\u000eZ\u0012N.$/ \u001a\u000f\u0019.\u0014O\u0011/\u0013\u0010N.\u0014O\u000fyO\u0011W\u0012N.$/ \u001a\u000f\u0019.\u0010O\u0010.\u000ex/\u0012.$/ .\u0014O0\u000f/\u001a\u0011N. .\u00128\u0010\u000eÉ®.\u00128\u0010\u0012É®.\u00128\u0010\u0016É®.\u00128\u0010\u001aÉ®/ .\u0012O\u001ex/\u0012.\u001aO\u0012y0\u001a\u001b\u000e\u0019\u0019.\u0013S\u001b\u000e.\u000f.\u0010xO\u0010.\u000ex/\u0012\u0011N. .\u00128\u0010\u000eÉ®/ .\u0012O\u0012x/\u0012.\u0013O\u000fy0\u0013\u001b\u000e\u0019\u0019.\u0010.\u0015\\\u001b\u000e.\u0010O\u0010.\u000ex/\u0012.\u0010.\u0014xO\u0010.\u000ex/\u0013\u0011N. .\u00128\u0010\u000eÉ¯/\".\u00138\u0010\u000eÉ/#.\u00168\u0010\u000e/\u001e.\u0012.\u0011. .!±Ä.\u001c.\u0014\u001e\u000f0\u001f.\u001el\u0012N.\u0017.\u0010D\u0010\u000e.\u0016.\u001fF\u0010\u000e\u0019.\".#®/ .\u0012O\u0012x/\u0012.\u0013O\u0012x/\u0013.\u0010O\u000fx0\u0010.\u0015U\u001b\u000e\u0019\u0019\u0019\u0019`;\n\nexport default class SynAudio {\n  constructor(options = {}) {\n    this._correlationSampleSize =\n      options.correlationSampleSize > 0 ? options.correlationSampleSize : 11025;\n    this._initialGranularity =\n      options.initialGranularity > 0 ? options.initialGranularity : 16;\n    this._correlationThreshold =\n      options.correlationThreshold >= 0 ? options.correlationThreshold : 0.5;\n\n    this._module = wasmModule.get(SynAudio);\n\n    if (!this._module) {\n      this._module = simd().then((simdSupported) =>\n        simdSupported\n          ? WebAssembly.compile(decode(simdWasm))\n          : WebAssembly.compile(decode(scalarWasm))\n      );\n      wasmModule.set(this._module);\n    }\n\n    this.SynAudioWorker = function SynAudioWorker(\n      module,\n      correlationSampleSize,\n      initialGranularity\n    ) {\n      this._sourceCache = new Map();\n\n      // correlation sample size must not exceed the size of each audio clip\n      this._getCorrelationSampleSize = (a, b) =>\n        Math.min(\n          a.samplesDecoded,\n          b.samplesDecoded,\n          this._correlationSampleSize\n        );\n\n      // initial granularity must not exceed the size of each audio clip\n      this._getInitialGranularity = (a, b) =>\n        Math.min(a.samplesDecoded, b.samplesDecoded, this._initialGranularity);\n\n      this._setAudioDataOnHeap = (input, output, heapPos) => {\n        const bytesPerElement = output.BYTES_PER_ELEMENT;\n\n        let floatPos = heapPos / bytesPerElement;\n\n        for (let i = 0; i < input.length; i++) {\n          heapPos += input[i].length * bytesPerElement;\n          output.set(input[i], floatPos);\n          floatPos += input[i].length;\n        }\n\n        return heapPos;\n      };\n\n      this._executeAsWorker = (functionName, params) => {\n        let source = this._sourceCache.get(functionName);\n\n        if (!source) {\n          const webworkerSourceCode =\n            \"'use strict';\" +\n            `(${((\n              SynAudioWorker,\n              functionName,\n              correlationSampleSize,\n              initialGranularity\n            ) => {\n              self.onmessage = (msg) => {\n                const worker = new SynAudioWorker(\n                  Promise.resolve(msg.data.module),\n                  correlationSampleSize,\n                  initialGranularity\n                );\n\n                worker._workerMethods\n                  .get(functionName)\n                  .apply(null, msg.data.params)\n                  .then((results) => {\n                    self.postMessage(results);\n                  });\n              };\n            }).toString()})(${SynAudioWorker.toString()}, \"${functionName}\", ${\n              this._correlationSampleSize\n            }, ${this._initialGranularity})`;\n\n          const type = \"text/javascript\";\n\n          try {\n            // browser\n            source = URL.createObjectURL(\n              new Blob([webworkerSourceCode], { type })\n            );\n          } catch {\n            // nodejs\n            source = `data:${type};base64,${Buffer.from(\n              webworkerSourceCode\n            ).toString(\"base64\")}`;\n          }\n\n          this._sourceCache.set(functionName, source);\n        }\n\n        const worker = new (globalThis.Worker || Worker)(source, {\n          name: \"SynAudio\",\n        });\n\n        const result = new Promise((resolve) => {\n          worker.onmessage = (message) => {\n            worker.terminate();\n            resolve(message.data);\n          };\n        });\n\n        this._module.then((module) => {\n          worker.postMessage({\n            module,\n            params,\n          });\n        });\n\n        return result;\n      };\n\n      this._sync = (a, b) => {\n        const pageSize = 64 * 1024;\n        const floatByteLength = Float32Array.BYTES_PER_ELEMENT;\n\n        const correlationSampleSize = this._getCorrelationSampleSize(a, b);\n        const initialGranularity = this._getInitialGranularity(a, b);\n\n        const memory = new WebAssembly.Memory({\n          initial:\n            ((a.samplesDecoded * a.channelData.length +\n              b.samplesDecoded * b.channelData.length) *\n              floatByteLength) /\n              pageSize +\n            4,\n        });\n\n        return this._module\n          .then((module) =>\n            WebAssembly.instantiate(module, {\n              env: { memory },\n            })\n          )\n          .then(({ exports }) => {\n            const instanceExports = new Map(Object.entries(exports));\n\n            const correlate = instanceExports.get(\"correlate\");\n            const dataArray = new Float32Array(memory.buffer);\n            const heapView = new DataView(memory.buffer);\n\n            const aPtr = instanceExports.get(\"__heap_base\").value;\n            const bPtr = this._setAudioDataOnHeap(\n              a.channelData,\n              dataArray,\n              aPtr\n            );\n            const bestCorrelationPtr = this._setAudioDataOnHeap(\n              b.channelData,\n              dataArray,\n              bPtr\n            );\n            const bestSampleOffsetPtr = bestCorrelationPtr + floatByteLength;\n\n            correlate(\n              aPtr,\n              a.samplesDecoded,\n              a.channelData.length,\n              bPtr,\n              b.samplesDecoded,\n              b.channelData.length,\n              correlationSampleSize,\n              initialGranularity,\n              bestCorrelationPtr,\n              bestSampleOffsetPtr\n            );\n\n            const bestCorrelation = heapView.getFloat32(\n              bestCorrelationPtr,\n              true\n            );\n            const bestSampleOffset = heapView.getInt32(\n              bestSampleOffsetPtr,\n              true\n            );\n\n            return {\n              correlation: bestCorrelation,\n              sampleOffset: bestSampleOffset,\n            };\n          });\n      };\n\n      this._syncWorkerConcurrent = (a, b, threads) => {\n        const promises = [];\n        const lengths = [0];\n\n        // |-----------|       |-----------|     \"end\"\n        // \"start\"   |-|---------|       |-----------|\n        //           | |\n        //           | |correlationSampleSize\n\n        // split a buffer into equal chunks for threads\n        // overlap at the start of the buffer by correlation sample size\n        // overlap at the end of the buffer by correlation sample size\n\n        // initial granularity  low -> high, more -> less threads\n        // correlation sample   low -> high, less -> more threads\n        // file size            low -> high, less -> more threads\n\n        const correlationSampleSize = this._getCorrelationSampleSize(a, b);\n\n        // rough estimate for a good max thread count for performance\n        const maxThreads =\n          (Math.log(a.samplesDecoded * correlationSampleSize) /\n            Math.log(this._initialGranularity + 1)) *\n          Math.log(correlationSampleSize / 10000 + 1);\n\n        threads = Math.max(\n          Math.round(\n            Math.min(\n              threads,\n              maxThreads,\n              a.samplesDecoded / correlationSampleSize / 4\n            )\n          ),\n          1\n        );\n\n        const aLength = Math.ceil(a.samplesDecoded / threads);\n\n        let offset = 0;\n        for (let t = 0; t < threads; t++) {\n          const aSplit = {\n            channelData: [],\n          };\n\n          for (let i = 0; i < a.channelData.length; i++) {\n            const cutChannel = a.channelData[i].subarray(\n              offset,\n              offset + aLength + correlationSampleSize\n            );\n            aSplit.channelData.push(cutChannel);\n            aSplit.samplesDecoded = cutChannel.length;\n          }\n\n          offset += aLength - correlationSampleSize;\n          lengths.push(offset);\n\n          promises.push(this._syncWorker(aSplit, b));\n        }\n\n        return Promise.all(promises).then((results) => {\n          // find the result with the highest correlation and calculate the offset relative to the input data\n          let bestResultIdx = 0;\n          let bestCorrelation = -1;\n          for (let i = 0; i < results.length; i++)\n            if (results[i].correlation > bestCorrelation) {\n              bestResultIdx = i;\n              bestCorrelation = results[i].correlation;\n            }\n\n          return {\n            correlation: results[bestResultIdx].correlation,\n            sampleOffset:\n              results[bestResultIdx].sampleOffset + lengths[bestResultIdx],\n          };\n        });\n      };\n\n      this._syncWorker = (a, b) => {\n        return this._executeAsWorker(\"_sync\", [a, b]);\n      };\n\n      this._syncWorkerConcurrentMain = (a, b, threads) => {\n        // can't serialize the webworker polyfill in nodejs\n        return globalThis.Worker\n          ? this._executeAsWorker(\"_syncWorkerConcurrent\", [a, b, threads])\n          : this._syncWorkerConcurrent(a, b, threads);\n      };\n\n      // constructor\n\n      // needed to serialize minified code when methods are refererenced as a string\n      // prettier-ignore\n      this._workerMethods = new Map([\n        [\"_sync\", this._sync],\n        [\"_syncWorker\", this._syncWorker],\n        [\"_syncWorkerConcurrent\", this._syncWorkerConcurrent],\n      ]);\n\n      this._module = module;\n      this._correlationSampleSize = correlationSampleSize;\n      this._initialGranularity = initialGranularity;\n    };\n\n    this._instance = new this.SynAudioWorker(\n      this._module,\n      this._correlationSampleSize,\n      this._initialGranularity\n    );\n  }\n\n  async syncWorkerConcurrent(a, b, threads) {\n    return this._instance._syncWorkerConcurrentMain(\n      a,\n      b,\n      threads >= 1 ? threads : 1\n    );\n  }\n\n  async syncWorker(a, b) {\n    return this._instance._syncWorker(a, b);\n  }\n\n  async sync(a, b) {\n    return this._instance._sync(a, b);\n  }\n\n  async syncMultiple(clips, threads) {\n    threads = threads >= 1 ? threads : 8;\n\n    const workers = [];\n    const graph = [];\n\n    let notify = () => {},\n      wait = Promise.resolve(),\n      runningThreads = 0;\n\n    const resetNotify = () => {\n      wait = new Promise((resolve) => {\n        notify = resolve;\n      });\n    };\n\n    for (let i = 0; i < clips.length; i++) graph.push({ vertex: {} });\n\n    for (let v = 0; v < clips.length; v++) {\n      const vertexClip = clips[v];\n      const vertex = graph[v].vertex;\n\n      vertex.name = vertexClip.name;\n      vertex.samplesDecoded = vertexClip.data.samplesDecoded;\n      vertex.edges = new Set();\n\n      for (let e = 0; e < clips.length; e++) {\n        if (v === e) continue;\n\n        const edgeClip = clips[e];\n        const edge = graph[e];\n\n        runningThreads++;\n        workers.push(\n          this.syncWorker(vertexClip.data, edgeClip.data).then(\n            (correlationResult) => {\n              if (correlationResult.correlation > this._correlationThreshold) {\n                vertex.edges.add({\n                  parent: vertex,\n                  vertex: edge.vertex,\n                  samplesDecoded: edgeClip.data.samplesDecoded,\n                  ...correlationResult,\n                });\n              }\n              runningThreads--;\n              notify();\n            }\n          )\n        );\n\n        if (runningThreads >= threads) {\n          resetNotify();\n          await wait;\n        }\n      }\n    }\n\n    await Promise.all(workers);\n\n    // prettier-ignore\n    const weighResults = (a, b) => {\n      if (a.parent && b.parent && a.parent.samplesDecoded !== b.parent.samplesDecoded) return a.parent.samplesDecoded > b.parent.samplesDecoded;\n      if (a.correlation !== b.correlation) return a.correlation > b.correlation;\n      if (a.sampleOffset !== b.sampleOffset) return a.sampleOffset > b.sampleOffset;\n      return a.vertex && b.vertex && a.vertex.name.localeCompare(b.vertex.name) < 0;\n    };\n\n    // detect cycles and weigh for which edge to remove\n    const path = new Map();\n    const cycles = new Set();\n\n    const detectCycle = (vertex) => {\n      for (const edge of vertex.edges.values()) {\n        if (path.has(vertex)) return path.get(vertex);\n\n        path.set(vertex, edge);\n\n        const cycleStartEdge = detectCycle(edge.vertex);\n        const cycleEndEdge = edge;\n\n        if (cycleStartEdge) {\n          let keep, remove;\n          if (weighResults(cycleStartEdge, cycleEndEdge)) {\n            keep = cycleStartEdge;\n            remove = cycleEndEdge;\n          } else {\n            keep = cycleEndEdge;\n            remove = cycleStartEdge;\n          }\n\n          if (!remove.cycleWith) {\n            remove.cycleWith = new Set();\n            cycles.add(remove);\n          }\n\n          remove.cycleWith.add(keep);\n\n          if (keep.cycleWith) {\n            keep.cycleWith.delete(remove);\n          }\n        }\n\n        path.delete(vertex);\n      }\n    };\n\n    for (const { vertex } of graph) detectCycle(vertex);\n\n    // delete any cycles\n    for (const edge of cycles)\n      if (edge.cycleWith.size) edge.parent.edges.delete(edge);\n\n    // find the root elements\n    const roots = new Set();\n    for (const v of graph) roots.add(v.vertex);\n    for (const v of graph)\n      for (const edge of v.vertex.edges) roots.delete(edge.vertex);\n\n    // build a unique sequence of matches for each root\n    const traverseRoot = (path, root, edges, sampleOffsetFromRoot = 0) => {\n      for (const edge of edges) {\n        if (\n          !(path.has(edge.vertex) && weighResults(path.get(edge.vertex), edge))\n        )\n          path.set(edge.vertex, {\n            name: edge.vertex.name,\n            correlation: edge.correlation,\n            sampleOffset: sampleOffsetFromRoot + edge.sampleOffset,\n          });\n\n        traverseRoot(\n          path,\n          root,\n          edge.vertex.edges,\n          sampleOffsetFromRoot + edge.sampleOffset\n        );\n      }\n    };\n\n    const results = [];\n\n    for (const root of roots) {\n      const path = new Map();\n      path.set(root, {\n        name: root.name,\n        sampleOffset: 0,\n      });\n      traverseRoot(path, root, root.edges);\n\n      results.push(\n        [...path.values()].sort(\n          (a, b) =>\n            a.sampleOffset - b.sampleOffset ||\n            (a.correlation || 0) - (b.correlation || 0) ||\n            b.name.localeCompare(a.name)\n        )\n      );\n    }\n\n    return results;\n  }\n}\n","import SynAudio from \"./src/SynAudio.js\";\n\nexport default SynAudio;\n"],"names":["module","exports","Worker","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","r","t","Map","forEach","e","set","n","Uint8Array","length","o","s","l","g","substring","parseInt","c","a","charCodeAt","get","subarray","simd","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","WebAssembly","validate","stop","apply","arguments","wasmModule","WeakMap","simdWasm","String","_templateObject","scalarWasm","_templateObject2","SynAudio","options","undefined","_classCallCheck","this","_correlationSampleSize","correlationSampleSize","_initialGranularity","initialGranularity","_correlationThreshold","correlationThreshold","_module","then","simdSupported","compile","decode","SynAudioWorker","_this","_sourceCache","_getCorrelationSampleSize","b","Math","min","samplesDecoded","_getInitialGranularity","_setAudioDataOnHeap","input","output","heapPos","bytesPerElement","BYTES_PER_ELEMENT","floatPos","i","_executeAsWorker","functionName","params","source","webworkerSourceCode","concat","self","onmessage","msg","Promise","resolve","data","_workerMethods","results","postMessage","toString","type","URL","createObjectURL","Blob","_unused","Buffer","from","worker","globalThis","name","result","message","terminate","_sync","floatByteLength","Float32Array","memory","Memory","initial","channelData","instantiate","env","_ref2","instanceExports","entries","correlate","dataArray","buffer","heapView","DataView","aPtr","bPtr","bestCorrelationPtr","bestSampleOffsetPtr","correlation","getFloat32","sampleOffset","getInt32","_syncWorkerConcurrent","threads","promises","lengths","maxThreads","log","max","round","aLength","ceil","offset","aSplit","cutChannel","push","_syncWorker","all","bestResultIdx","bestCorrelation","_syncWorkerConcurrentMain","_instance","_createClass","key","_callee2","_context2","_x","_x2","_x3","_callee3","_context3","_x4","_x5","_callee4","_context4","_x6","_x7","_syncMultiple","_callee5","clips","workers","graph","notify","wait","runningThreads","resetNotify","_loop","v","weighResults","path","cycles","detectCycle","_i2","_graph","vertex","_iterator2","_step2","_edge2","roots","_i3","_graph2","_v","_i4","_graph3","_v2","_iterator3","_step3","edge","traverseRoot","_iterator5","_step5","root","_path","_this2","_context7","vertexClip","_loop2","_context6","edges","Set","edgeClip","_context5","syncWorker","correlationResult","add","_objectSpread","parent","delegateYield","t0","localeCompare","_step","_iterator","_createForOfIteratorHelper","values","done","has","cycleStartEdge","cycleEndEdge","keep","remove","cycleWith","delete","err","f","size","_step4","sampleOffsetFromRoot","_iterator4","_toConsumableArray","sort","_x8","_x9"],"sourceRoot":""}