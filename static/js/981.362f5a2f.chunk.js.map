{"version":3,"file":"static/js/981.362f5a2f.chunk.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","Visualizer/Butterchurn/butterchurn-worker/WorkerAudioContext.js","Visualizer/Butterchurn/butterchurn-worker/butterchurn-worker.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"452\":\"3487b7ae\",\"646\":\"1101c964\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/icecast-metadata-js/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t981: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkdemo\"] = self[\"webpackChunkdemo\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// implements the BaseAudioContext interfaces to mimic having AudioContext available in a web worker\n/* eslint-disable */\n\nexport const fftData = new Map();\n\nconst references = new Map();\nlet referenceId = -1;\n\nconst addReference = (obj) => {\n  references.set(++referenceId, obj);\n  return referenceId;\n};\n\nclass WorkerAudioNode {\n  constructor() {}\n\n  connect(destination) {\n    self.postMessage({\n      operation: \"connect\",\n      thisRef: this.ref,\n      argRef: destination.ref,\n    });\n  }\n}\n\nexport class WorkerSourceNode extends WorkerAudioNode {\n  constructor() {\n    super();\n    this.ref = addReference(this);\n  }\n}\n\nclass WorkerDelayNode extends WorkerAudioNode {\n  constructor() {\n    super();\n    this.ref = addReference(this);\n  }\n}\n\nclass WorkerAnalyserNode extends WorkerAudioNode {\n  constructor() {\n    super();\n    this.ref = addReference(this);\n  }\n\n  set fftSize(fftSize) {\n    this._fftSize = fftSize;\n    self.postMessage({\n      operation: \"fftSize\",\n      thisRef: this.ref,\n      argSet: fftSize,\n    });\n  }\n\n  set smoothingTimeConstant(smoothingTimeConstant) {\n    self.postMessage({\n      operation: \"smoothingTimeConstant\",\n      thisRef: this.ref,\n      argSet: smoothingTimeConstant,\n    });\n  }\n\n  get fftSize() {\n    return this._fftSize;\n  }\n\n  getByteTimeDomainData(uint8Array) {\n    const previousData = fftData.get(this.ref);\n\n    if (previousData) {\n      uint8Array.set(previousData);\n    }\n\n    self.postMessage({\n      operation: \"getByteTimeDomainData\",\n      thisRef: this.ref,\n      args: uint8Array.length,\n    });\n  }\n}\n\nclass WorkerChannelSplitterNode extends WorkerAudioNode {\n  constructor() {\n    super();\n    this.ref = addReference(this);\n  }\n}\n\nexport class WorkerAudioContext {\n  constructor() {\n    this.ref = addReference(this);\n  }\n\n  createDelay() {\n    const delayNode = new WorkerDelayNode();\n\n    self.postMessage({\n      operation: \"createDelay\",\n      thisRef: this.ref,\n      thatRef: delayNode.ref,\n      args: [],\n    });\n    return delayNode;\n  }\n\n  createAnalyser() {\n    const analyser = new WorkerAnalyserNode();\n\n    self.postMessage({\n      operation: \"createAnalyser\",\n      thisRef: this.ref,\n      thatRef: analyser.ref,\n      args: [],\n    });\n    return analyser;\n  }\n\n  createChannelSplitter(numberOfOutputs) {\n    const channelSplitterNode = new WorkerChannelSplitterNode();\n\n    self.postMessage({\n      operation: \"createChannelSplitter\",\n      args: [numberOfOutputs],\n      thisRef: this.ref,\n      thatRef: channelSplitterNode.ref,\n    });\n    return channelSplitterNode;\n  }\n}\n","/* eslint-disable */\nimport {\n  WorkerAudioContext,\n  WorkerSourceNode,\n  fftData,\n} from \"./WorkerAudioContext\";\n\nglobalThis.window = globalThis;\nglobalThis.Image = function () {};\nglobalThis.document = {\n  createElement: (type) => {\n    switch (type) {\n      case \"canvas\":\n        return {\n          getContext: () => {},\n        };\n    }\n  },\n};\nglobalThis.equal = function equal(x, y) {\n  return Math.abs(x - y) < 0.00001 ? 1 : 0;\n};\nglobalThis.mod = function mod(x, y) {\n  if (y === 0) {\n    return 0;\n  }\n\n  var z = Math.floor(x) % Math.floor(y);\n  return z;\n};\n\nconst worker = async () => {\n  const butterchurn = (await import(\"butterchurn\")).default;\n  const butterchurnPresets = (await import(\"butterchurn-presets\")).default;\n\n  let visualizer, canvas;\n  const audioContext = new WorkerAudioContext();\n\n  self.onmessage = ({ data }) => {\n    switch (data.operation) {\n      case \"render\": {\n        visualizer.render();\n        break;\n      }\n      case \"createVisualizer\": {\n        canvas = data.canvas;\n        canvas.width = data.innerWidth;\n        canvas.height = data.innerHeight;\n\n        visualizer = butterchurn.createVisualizer(audioContext, data.canvas, {\n          width: data.innerWidth,\n          height: data.innerHeight,\n          pixelRatio: data.devicePixelRatio || 1,\n          textureRatio: 1,\n        });\n        break;\n      }\n      case \"setByteTimeDomainData\": {\n        fftData.set(data.thisRef, data.fftData);\n        break;\n      }\n      case \"loadPreset\": {\n        const presets = butterchurnPresets.getPresets();\n        visualizer.loadPreset(presets[data.preset]);\n        break;\n      }\n      case \"connectAudio\": {\n        const sourceNode = new WorkerSourceNode();\n        self.postMessage({\n          operation: \"addSource\",\n          thisRef: sourceNode.ref,\n        });\n\n        visualizer.connectAudio(sourceNode);\n        break;\n      }\n      case \"setRendererSize\": {\n        canvas.width = data.innerWidth;\n        canvas.height = data.innerHeight;\n\n        visualizer.setRendererSize(data.innerWidth, data.innerHeight);\n        break;\n      }\n      default: {\n        console.log(\"Unknown message...\", data);\n      }\n    }\n  };\n};\n\nworker();\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","leafPrototypes","getProto","Object","getPrototypeOf","obj","t","value","mode","this","__esModule","then","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","d","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","miniCssF","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","i","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","push","bind","data","chunkIds","moreModules","runtime","length","pop","fftData","Map","references","referenceId","addReference","set","WorkerAudioNode","constructor","connect","destination","postMessage","operation","thisRef","ref","argRef","WorkerSourceNode","super","WorkerDelayNode","WorkerAnalyserNode","fftSize","_fftSize","argSet","smoothingTimeConstant","getByteTimeDomainData","uint8Array","previousData","args","WorkerChannelSplitterNode","WorkerAudioContext","createDelay","delayNode","thatRef","createAnalyser","analyser","createChannelSplitter","numberOfOutputs","channelSplitterNode","globalThis","window","Image","document","createElement","type","getContext","equal","x","y","Math","abs","mod","floor","async","butterchurn","default","butterchurnPresets","visualizer","canvas","audioContext","onmessage","_ref","render","width","innerWidth","height","innerHeight","createVisualizer","pixelRatio","devicePixelRatio","textureRatio","presets","getPresets","loadPreset","preset","sourceNode","connectAudio","setRendererSize","console","log","worker"],"sourceRoot":""}