/*! 
 * Copyright 2021 Ethan Halsall
 * https://github.com/eshaz/icecast-metadata-js
 *
 * This file is part of icecast-metadata-stats.
 *
 * icecast-metadata-stats free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * icecast-metadata-stats distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>
 */
var IcecastMetadataStats;(()=>{"use strict";var t={d:(s,e)=>{for(var i in e)t.o(e,i)&&!t.o(s,i)&&Object.defineProperty(s,i,{enumerable:!0,get:e[i]})},o:(t,s)=>Object.prototype.hasOwnProperty.call(t,s)},s={};(()=>{t.d(s,{default:()=>F});class e{constructor(){this.t=0,this.i=0,this.h=0,this.l=0,this.u=0,this.m=0,this.g=0}get stats(){return{totalBytesRead:this.t,streamBytesRead:this.i,metadataLengthBytesRead:this.h,metadataBytesRead:this.l,currentBytesRemaining:this.u,currentStreamBytesRemaining:this.m,currentMetadataBytesRemaining:this.g}}set currentStreamBytesRemaining(t){this.m+=t}set currentMetadataBytesRemaining(t){this.g=t}addBytes(t){this.t+=t,this.u-=t}addStreamBytes(t){this.i+=t,this.m-=t}addMetadataLengthBytes(t){this.h+=t}addMetadataBytes(t){this.l+=t,this.g-=t}addCurrentBytesRemaining(t){this.u+=t}}const i=()=>{};class a{constructor(t){this.p=0,this.S=0,this.I=new Uint8Array(0),this.M=[],this._=0,this.A=new e,this.T=t.onStream||i,this.C=t.onMetadata||i,this.R=t.onMetadataFailed||i,this.B=t.onError||i,this.v=t.enableLogging||!1,this.$=Promise.resolve(),this.D=Promise.resolve(),this.L=this.O(),this.L.next()}*O(){for(this.p=1/0;;)this.P(yield*this.N()),yield*this.j()}static Y(...t){const s=t.reduce(((t,s)=>t+s.length),0);return this.k(t,s)}static k(t,s){const e=new Uint8Array(s);return t.reduce(((t,s)=>(e.set(s,t),t+s.length)),0),e}*iterator(t){for(let s=this.L.next(t);s.value;s=this.L.next())yield s.value}readAll(t){for(let s=this.L.next(t);s.value;s=this.L.next());}async*asyncIterator(t){for(let s=this.L.next(t);s.value;s=this.L.next())await this.$,await this.D,yield s.value}async asyncReadAll(t){for(let s=this.L.next(t);s.value;s=this.L.next())await this.$,await this.D}U(...t){this.v&&console.warn("icecast-metadata-js",t.reduce(((t,s)=>t+"\n  "+s),"")),this.B(...t)}P(t){this.M.push(t),this._+=t.length}*j(){if(this.M.length){const t=a.k(this.M,this._);this.M=[],this._=0,this.A.addStreamBytes(t.length);const s={stream:t,stats:this.A.stats};this.$=this.T(s),yield s}}*V(t){yield*this.j();const s={metadata:t,stats:this.A.stats};this.D=this.C(s),yield s}*N(t=0){for(this.S===this.I.length&&(this.I=yield*this.F(),this.S=0);this.I.length-this.S<t;)this.I=a.Y(this.I,yield*this.F());const s=this.I.subarray(this.S,(t||this.p)+this.S);return this.A.addBytes(s.length),this.p=s.length<this.p?this.p-s.length:0,this.S+=s.length,s}*F(){let t;yield*this.j();do{t=yield}while(!t||0===t.length);return this.A.addCurrentBytesRemaining(t.length),t}}class r extends a{constructor({icyMetaInt:t,icyDetectionTimeout:s=2e3,icyCharacterEncoding:e="utf-8",...i}){super(i),this.G=new globalThis.TextDecoder(e),this.H=t,this.q=s,this.L=this.J(),this.L.next()}*J(){if(yield*this.K())for(;;)this.p=this.H,yield*this.W(),yield*this.X(),this.p&&(yield*this.Z());this.p=1/0,yield*this.W()}static parseIcyMetadata(t){const s=/(?<key>[^\0]+?)='(?<val>[^\0]*?)(;$|';|'$|$)/,e={};for(const i of t.match(new RegExp(s,"g"))||[]){const t=i.match(s);t&&(e[t.groups.key]=t.groups.val)}return e}get icyMetaInt(){return this.H}*K(){if(this.H>0)return!0;if(!this.q)return!1;this.U("Passed in Icy-MetaInt is invalid. Attempting to detect ICY Metadata.","See https://github.com/eshaz/icecast-metadata-js for information on how to properly request ICY Metadata.");const t=[null,83,116,114,101,97,109,84,105,116,108,101,61],s=Date.now();let e=0;for(;s+this.q>Date.now();){this.I=a.Y(this.I,yield*this.F());t:for(;e<this.I.length-t.length;){for(let s=1;s<t.length;s++)if(this.I[s+e]!==t[s]){e++;continue t}return this.U(`Found ICY Metadata! Setting Icy-MetaInt to ${e}.`),this.H=e,!0}}return this.U("ICY Metadata not detected, but continuing anyway. Audio errors will occur if there is ICY metadata.",`Searched ${this.I.length} bytes for ${(Date.now()-s)/1e3} seconds.`,"Try increasing the `icyDetectionTimeout` value if ICY metadata is present in the stream."),this.R("icy"),!1}*W(){for(this.A.currentStreamBytesRemaining=this.p;this.p;)this.P(yield*super.N())}*X(){this.p=1;do{this.p=16*(yield*this.N())[0]}while(1===this.p);this.A.addMetadataLengthBytes(1)}*Z(){this.A.currentMetadataBytesRemaining=this.p;const t=yield*this.N(this.p);this.A.addMetadataBytes(t.length),yield*this.V(r.parseIcyMetadata(this.G.decode(t)))}}class n extends a{constructor(t){super(t),this.G=new globalThis.TextDecoder("utf-8"),this.L=this.tt(),this.L.next(),this.st=!1}*tt(){if(yield*this.et()){const t=yield*this.it();if(t)for(;yield*this.et();)this.st||(yield*this.Z(t)),yield*this.W()}this.p=1/0,yield*this.W()}rt(t,s=0){return new DataView(Uint8Array.from([...t.subarray(s,s+4)]).buffer).getUint32(0,!0)}nt(t,s){return String.fromCharCode(...s).match(t)}*et(){let t=[];for(;t.length<=65307;){const s=yield*super.N(6);if(79===s[0]&&103===s[1]&&103===s[2]&&83===s[3]&&!(248&s[5])){this.st=1&s[5],this.S-=6,this.p+=6,this.A.t-=6,this.A.u+=6;break}t.push(s[0]),this.S-=5,this.A.t-=5,this.A.u+=5}if(t.length&&this.P(Uint8Array.from(t)),t.length>65307)return this.U("This stream is not an Ogg stream. No Ogg metadata will be returned.","See https://github.com/eshaz/icecast-metadata-js for information on Ogg metadata."),this.R("ogg"),!1;const s=yield*this.N(27),e=yield*this.N(s[26]);return this.p=e.reduce(((t,s)=>t+s),0),!0}*it(){const t=yield*this.N(8);return yield*this.W(),this.nt(/\x7fFLAC/,t.subarray(0,5))?{regex:/^[\x84|\x04]/,length:4}:this.nt(/OpusHead/,t.subarray(0,8))?{regex:/OpusTags/,length:8}:this.nt(/\x01vorbis/,t.subarray(0,7))?{regex:/\x03vorbis/,length:7}:void 0}*Z({regex:t,length:s}){this.nt(t,yield*this.N(s))&&(yield*this.V(yield*this.ht()))}*W(){for(;this.p;)yield*this.N()}*N(t){const s=yield*super.N(t);return this.P(s),s}*F(){const t=yield*super.F();return this.A.currentStreamBytesRemaining=t.length,t}*ht(){const t=this.rt(yield*this.N(4));this.A.addMetadataBytes(4);const s=this.G.decode(yield*this.N(t));this.A.addMetadataBytes(t);const e=this.rt(yield*this.N(4));this.A.addMetadataBytes(4);const i=[];for(let t=0;t<e;t++){const t=yield*this.N(4);this.A.addMetadataBytes(4),i.push(yield*this.N(this.rt(t))),this.A.addMetadataBytes(i[i.length-1].length)}return this.A.currentMetadataBytesRemaining=0,i.reduce(((t,s)=>{const e=s.indexOf(61),i=String.fromCharCode(...s.subarray(0,e)).toUpperCase(),a=this.G.decode(s.subarray(e+1));return t[i]=t[i]?`${t[i]}; ${a}`:a,t}),{VENDOR_STRING:s})}}class h{constructor(t){const{onStream:s,...e}=t;this.ot=new n(t),this.ct=new r(e)}get icyMetaInt(){return this.ct.icyMetaInt}*iterator(t){for(const s of this.ct.iterator(t))s.stream?yield*this.ot.iterator(s.stream):yield s}readAll(t){for(const s of this.ct.iterator(t))s.stream&&this.ot.readAll(s.stream)}async*asyncIterator(t){for await(const s of this.ct.asyncIterator(t))if(s.stream)for await(const t of this.ot.asyncIterator(s.stream))yield t;else yield s}async asyncReadAll(t){for await(const s of this.ct.iterator(t))s.stream&&await this.ot.asyncReadAll(s.stream)}}class o{constructor({metadataTypes:t=["icy"],...s}={}){const e=t.includes("icy"),i=t.includes("ogg");this.lt=e&&i?new h(s):i?new n(s):e?new r(s):new a(s)}static parseIcyMetadata(t){return r.parseIcyMetadata(t)}get icyMetaInt(){return this.lt.icyMetaInt}*iterator(t){yield*this.lt.iterator(t)}readAll(t){this.lt.readAll(t)}async*asyncIterator(t){return yield*this.lt.asyncIterator(t)}async asyncReadAll(t){return this.lt.asyncReadAll(t)}}const c=()=>{};class l{constructor(t,{onStream:s=c,...e}){let i;this.yt=new ReadableStream({async start(a){i=new o({icyMetaInt:parseInt(t.headers.get("Icy-MetaInt")),...e,onStream:async t=>(a.enqueue(t.stream),s(t))});for await(const s of l.asyncIterator(t.body))await i.asyncReadAll(s);a.close()}}),this.dt=i}get icyMetaInt(){return this.dt.icyMetaInt}get readableStream(){return this.yt}async startReading(){try{for await(const t of l.asyncIterator(this.yt));}catch(t){if("AbortError"!==t.name)throw t}}static asyncIterator(t){const s=t.getReader();return{[Symbol.asyncIterator]:()=>({next:()=>s.read()})}}}const y=()=>{},d="stopped",u="fetching",m=new WeakMap,g=Symbol(),f=Symbol(),p=Symbol(),b=Symbol(),S=Symbol(),w=Symbol(),I=Symbol(),M=Symbol(),x=Symbol(),_=Symbol(),A=Symbol(),T=Symbol(),C=Symbol(),R=Symbol(),B=Symbol(),v=Symbol(),E=Symbol(),$=Symbol(),D=Symbol(),L=Symbol(),O=Symbol(),P=Symbol(),N=Symbol(),j=Symbol(),Y=Symbol(),k=Symbol(),U=Symbol(),V=Symbol();class F{constructor(t,s={}){const e=t.split("/").slice(0,-1).join("/");m.set(this,{[E]:t,[S]:s.icestatsEndpoint||`${e}/status-json.xsl`,[M]:s.statsEndpoint||`${e}/stats`,[A]:s.nextsongsEndpoint||`${e}/nextsongs`,[R]:s.sevenhtmlEndpoint||`${e}/7.html`,[O]:s.sources||[],[P]:1e3*(s.interval||30),[N]:s.onStats||y,[j]:s.onStatsFetch||y,[$]:s.icyMetaInt,[D]:s.icyCharacterEncoding,[L]:s.icyDetectionTimeout,[g]:new AbortController,[p]:new AbortController,[w]:new AbortController,[x]:new AbortController,[T]:new AbortController,[B]:new AbortController,[Y]:d})}static xml2Json(t){const s=t=>{if(!t.children.length)return Number.isNaN(Number(t.innerHTML))?t.innerHTML:Number(t.innerHTML);const e={};for(const i of t.children)i.nodeName in e?Array.isArray(e[i.nodeName])?e[i.nodeName].push(s(i)):e[i.nodeName]=[e[i.nodeName],s(i)]:e[i.nodeName]=s(i);return e};return s((t=>(new DOMParser).parseFromString(t,"application/xml"))(t))}get state(){return m.get(this)[Y]}get icestatsEndpoint(){return m.get(this)[S]}get statsEndpoint(){return m.get(this)[M]}get nextsongsEndpoint(){return m.get(this)[A]}get sevenhtmlEndpoint(){return m.get(this)[R]}start(){m.get(this)[Y]===d&&(m.get(this)[Y]="running",this.fetch().then(m.get(this)[N]),m.get(this)[k]=setInterval((()=>{this.fetch().then(m.get(this)[N])}),m.get(this)[P]))}stop(){m.get(this)[Y]!==d&&(m.get(this)[Y]=d,clearInterval(m.get(this)[k]),m.get(this)[g].abort(),m.get(this)[p].abort(),m.get(this)[w].abort(),m.get(this)[x].abort(),m.get(this)[B].abort())}async fetch(){if(m.get(this)[Y]!==u){const t=m.get(this)[Y];m.get(this)[Y]=u,m.get(this)[j](m.get(this)[O]);const s=[];m.get(this)[O].includes("icestats")&&s.push(this.getIcestats()),m.get(this)[O].includes("sevenhtml")&&s.push(this.getSevenhtml()),m.get(this)[O].includes("stats")&&s.push(this.getStats()),m.get(this)[O].includes("nextsongs")&&s.push(this.getNextsongs()),m.get(this)[O].includes("icy")&&s.push(this.getIcyMetadata()),m.get(this)[O].includes("ogg")&&s.push(this.getOggMetadata());const e=await Promise.all(s).then((t=>t.reduce(((t,s)=>({...t,...s})),{})));return m.get(this)[Y]=m.get(this)[Y]!==u?m.get(this)[Y]:t,e}}async getIcestats(){return this[U]({status:I,endpoint:S,controller:w,mapper:t=>t.json()}).then((t=>({icestats:t&&t.icestats})))}async getSevenhtml(){return this[U]({status:v,endpoint:R,controller:B,mapper:async t=>(await t.text()).match(/(.*?)<\/body>/gi).map((t=>{const s=t.match(/(<body>|,)(?<stats>.*)<\/body>/i).groups.stats.split(",");return 7===s.length?{StreamTitle:s[6],currentListeners:parseInt(s[4]),peakListeners:parseInt(s[2]),maxListeners:parseInt(s[3]),bitrate:parseInt(s[5]),status:parseInt(s[1]),serverListeners:parseInt(s[0])}:{StreamTitle:s[4],currentListeners:parseInt(s[2]),peakListeners:parseInt(s[0]),maxListeners:parseInt(s[1]),bitrate:parseInt(s[3])}}))}).then((t=>({sevenhtml:t})))}async getStats(){return this[U]({status:_,endpoint:M,controller:x,mapper:async t=>F.xml2Json(await t.text()).SHOUTCASTSERVER.STREAMSTATS}).then((t=>({stats:t})))}async getNextsongs(){return this[U]({status:C,endpoint:A,controller:T,mapper:async t=>F.xml2Json(await t.text()).SHOUTCASTSERVER.NEXTSONGS}).then((t=>({nextsongs:t})))}async getIcyMetadata(){return this[V]({status:f,endpoint:E,controller:g,metadataType:"icy",headers:{"Icy-MetaData":1}})}async getOggMetadata(){return this[V]({status:b,endpoint:E,controller:p,metadataType:"ogg"})}async[V]({status:t,endpoint:s,controller:e,headers:i,metadataType:a}){return this[U]({status:t,endpoint:s,controller:e,headers:i,mapper:async t=>new Promise((s=>{new l(t,{onMetadata:({metadata:t})=>{m.get(this)[e].abort(),s(t)},onMetadataFailed:()=>{m.get(this)[e].abort(),s()},metadataTypes:a,icyMetaInt:m.get(this)[$],icyCharacterEncoding:m.get(this)[D],icyDetectionTimeout:m.get(this)[L]}).startReading()}))}).then((t=>({[a]:t})))}async[U]({status:t,endpoint:s,controller:e,mapper:i,headers:a={}}){if(!m.get(this)[t])return m.get(this)[t]=!0,fetch(m.get(this)[s],{method:"GET",headers:a,signal:m.get(this)[e].signal}).then((t=>{if(!t.ok)throw new Error(`HTTP Error ${t.status}`);return t})).then(i).catch((t=>{"AbortError"!==t.name&&console.warn(`Failed to fetch ${m.get(this)[s]}`,t)})).finally((()=>{m.get(this)[t]=!1,m.get(this)[e]=new AbortController}))}}})(),IcecastMetadataStats=s.default})();
//# sourceMappingURL=icecast-metadata-stats-0.1.7.min.js.map